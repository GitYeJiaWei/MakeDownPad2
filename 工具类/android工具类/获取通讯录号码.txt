case R.id.Contacts1://调用通讯录的地方
	Intent intent1 = new Intent(Intent.ACTION_PICK,
                    ContactsContract.Contacts.CONTENT_URI);
            MainActivity.this.startActivityForResult(intent1, 1);
			break; 
case R.id.Contacts2://调用通讯录的地方
			Intent intent2 = new Intent(Intent.ACTION_PICK,
                    ContactsContract.Contacts.CONTENT_URI);
            MainActivity.this.startActivityForResult(intent2, 2);
			break;


@Override 
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
	        // 打开通讯录
	        super.onActivityResult(requestCode, resultCode, data);
	        switch (requestCode) {
	        case 1:
	            if (resultCode == RESULT_OK) {
	                Uri contactData = data.getData();
	                Cursor cursor = managedQuery(contactData, null, null, null,
	                        null);
	                cursor.moveToFirst();
	                String num = this.getContactPhone(cursor);
	                if (num.indexOf(" ")>-1) {
						num=num.replaceAll(" ", "");
					}
	                callingNumber.setText(num);
	            }
	            break;
	        case 2:
	            if (resultCode == RESULT_OK) {
	                Uri contactData = data.getData();
	                Cursor cursor = managedQuery(contactData, null, null, null,
	                        null);
	                cursor.moveToFirst();
	                String num = this.getContactPhone(cursor);
	                if (num.indexOf(" ")>-1) {
						num=num.replaceAll(" ", "");
					}
	                calledNumber.setText(num);
	            }
	            break;
	        default:
	            break;
	        }
	    }
	 
	 private String getContactPhone(Cursor cursor) {
	        // 获取通讯录号码
	        int phoneColumn = cursor
	                .getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER);
	        int phoneNum = cursor.getInt(phoneColumn);
	        String result = "";
	        if (phoneNum > 0) {
	            // 获得联系人的ID号
	            int idColumn = cursor.getColumnIndex(ContactsContract.Contacts._ID);
	            String contactId = cursor.getString(idColumn);
	            // 获得联系人电话的cursor
	            Cursor phone = getContentResolver().query(
	                    ContactsContract.CommonDataKinds.Phone.CONTENT_URI,
	                    null,
	                    ContactsContract.CommonDataKinds.Phone.CONTACT_ID + "="
	                            + contactId, null, null);
	            if (phone.moveToFirst()) {
	                for (; !phone.isAfterLast(); phone.moveToNext()) {
	                    int index = phone
	                            .getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER);
	                    int typeindex = phone
	                            .getColumnIndex(ContactsContract.CommonDataKinds.Phone.TYPE);
	                    int phone_type = phone.getInt(typeindex);
	                    String phoneNumber = phone.getString(index);
	                    result = phoneNumber;
	                }
	                if (!phone.isClosed()) {
	                    phone.close();
	                }
	            }
	        }
	        return result;
	    }